#!/usr/bin/env node 

var JQ = 'http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.1.min.js';
var jsdom = require('jsdom'),
    fs = require('fs'),
    util = require('util'),
    vm = require('vm');

var args = process.argv.slice(1);

var input = args[1];
var output = args[2];
if ( !input || !output ) {
    util.puts("usage: " + args[0] + " inputfile outputfile" );
    process.exit(1);
}

var root;
var $root;
var length;
var current = 0;
var sandbox = {
    console:console,
    util:util
};
parse = function( input ) {
    jsdom.env( input, [JQ], function( errors, window ) {
        root = window;
        var $ = window.$;
        references = $('[data-role="cite"]');
        length = references.length;
        references.each( function(i, data) {
            var $data = $(data);
            var url = $data.attr('data-ref-url');
            var selector = $data.attr('data-ref-sel');
            
            console.log( i + ":" + url + ":" + selector );
            apply( url, selector, $data );
        });
    });
};

apply = function( url, selector, owner ) {
    jsdom.env( url, [JQ], function( errors, window ) {
        if ( errors ) {
            if ( errors ) {
                console.log( errors );
            // make build error
                throw errors;
            }
        }
        var $ = window.$;
        var target = $(selector);
        var html = "";
        if ( !target ) {
            console.log("ERROR!!!"); 
            // make build error
            process.exit(1);
        }
       
        $(target).each( function( i, e ) {
            html += $(e).html();
        });
        
        var scripts = owner.find("localScripts").text();
        owner.replaceWith( html );

        if ( scripts ) {
            $.extend( sandbox, {
                html: html,
                $: root.$,
                owner: $(target)
            });
            vm.runInNewContext( scripts, sandbox );
        }      

        done();
    });
};

done = function() {
    current++;
    if ( current == length ) {
        write( output, root );
    }
};

write = function( output, root ) {
    var out = root.$("html").html();
    out = out.substr( 0, out.lastIndexOf("<script") );
    out = "<!DOCTYPE html>\n<html>\n" + out + "\n</html>";

    fs.writeFile( output, out, encoding='utf8', function(err) {
        if ( err ) {
            throw err;
        }
    });
    console.log("done");
};

parse( input );

