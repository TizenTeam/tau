<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head><script type="text/javascript" src="../snippet.js"></script>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link href="../styles.css" rel="StyleSheet" type="text/css">
<link href="../snippet.css" rel="StyleSheet" type="text/css">
  <title>Extendable List</title>
</head>

<body onload="prettyPrint()">
<!--<div id="banner">
Tizen</div>-->

<h1>Extendable List</h1>

<p>In the Web environment, it is challenging to display a large amount of data in a list, such as displaying a contact list of over 1000 list items. It takes time to display the entire list in HTML and the DOM manipulation is complex.</p>

<p>The extendable list widget is used to display a list of unlimited data elements on the screen for better performance. The list is extended if you click the button at the bottom of the list to load more data elements. Extendable lists are based on the <span style="font-family: Courier New,Courier,monospace">jQuery.template</span> plugin as described in the <a href="https://github.com/jquery/jquery-tmpl" target="_blank">jQuery documentation for jQuery.template plugin</a>.</p>

<p>To add a extendable list widget to the application, use the following code:</p>
<pre class="prettyprint">&lt;script id=&quot;tmp-3-1-1&quot; type=&quot;text/x-jquery-tmpl&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;li class=&quot;ui-li-3-1-1&quot;&gt;&lt;span class=&quot;ui-li-text-main&quot;&gt;${NAME}&lt;/span&gt;&lt;/li&gt;
&lt;/script&gt;
 
&lt;script id=&quot;tmp_load_more&quot; type=&quot;text/x-jquery-tmpl&quot;&gt; 
&nbsp;&nbsp;&nbsp;&lt;li class=&quot;ui-li-3-1-1&quot; style=&quot;text-align:center; margin:0 auto&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div data-role=&quot;button&quot;&gt;Load ${NUM_MORE_ITEMS} more items&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/li&gt;
&lt;/script&gt;
 
&lt;ul id=&quot;extendable_list_main&quot; data-role=&quot;extendablelist&quot; 
&nbsp;data-extenditems=&quot;50&quot; data-template=&quot;tmp-3-1-1&quot;&gt;
&lt;/ul&gt;
</pre>

<p>The following table describes the extendable list options.</p>

<table>
<tbody>
	<tr>
		<th>Option</th>
		<th>Input type</th>
		<th>Description</th>
	</tr>
	<tr>
      <td><span style="font-family: Courier New,Courier,monospace">data-role</span></td>
	  <td>String</td>
	  <td>Creates the extendable list view. The value must be set to <span style="font-family: Courier New,Courier,monospace">extendablelist</span>.
	  <p>Only the <span style="font-family: Courier New,Courier,monospace">&lt;ul&gt;</span> element, which a <span style="font-family: Courier New,Courier,monospace">id</span> attribute defined, supports this option. Also, the <span style="font-family: Courier New,Courier,monospace">elLoadSuccess</span> class attribute must be defined in the <span style="font-family: Courier New,Courier,monospace">&lt;ul&gt;</span> element to ensure that loading data from the database is complete.</p></td>
	</tr>
	<tr>
      <td><span style="font-family: Courier New,Courier,monospace">data-template</span></td>
	  <td>String</td>
	  <td>Specifies the <span style="font-family: Courier New,Courier,monospace">jQuery.template</span> element ID.
	  <p>The <span style="font-family: Courier New,Courier,monospace">jQuery.template</span> must be defined. The template style can use rem units to support scalability.</p>
	  <p>For using the button at the bottom of the list to load more data elements, there must be list view template with the button. The attribute ID must be <span style="font-family: Courier New,Courier,monospace">tmp_load_more</span>.</p></td>
	</tr>
	<tr>
      <td><span style="font-family: Courier New,Courier,monospace">data-extenditems</span></td>
	  <td>Integer</td>
	  <td>Defines the number of data elements to be extended at a time.</td>
	</tr>
</tbody>
</table>

<p>You can use the <span style="font-family: Courier New,Courier,monospace">create()</span> method to create an extendable list. The method that calls the <span style="font-family: Courier New,Courier,monospace">create</span> method receives 3 arguments:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">function itemData(index)</span>
<p>Used to return a JSON object for a given index. The index value must be between 0 and <span style="font-family: Courier New,Courier,monospace">numItemData-1</span>.</p>
</li>
<li><span style="font-family: Courier New,Courier,monospace">number numItemData | function numItemData()</span>
<p>Static number of items, or a method returning a number of items.</p>
</li>
<li><span style="font-family: Courier New,Courier,monospace">function cacheItemData(minIndex, maxIndex)</span>
<p>Used to prepare JSON data. The method is called before the <span style="font-family: Courier New,Courier,monospace">itemData(index)</span> method, which is called for index values between <span style="font-family: Courier New,Courier,monospace">minIndex</span> and <span style="font-family: Courier New,Courier,monospace">maxIndex</span>.</p>
</li>
</ul>

<p>You can use the <span style="font-family: Courier New,Courier,monospace">recreate()</span> method to update an extendable list with a new data array containing, for example, search results.</p>




<h2>Where to Go Next</h2>
<ul>
 <li><a href="widget_reference.htm">Widget Reference</a></li>

</ul>

<div id="footer">
<hr size="1" /><font size="1">Except as noted, this content is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a>.<br />For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> </div>
<!--start-->
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<!--end-->



</body>
</html>
