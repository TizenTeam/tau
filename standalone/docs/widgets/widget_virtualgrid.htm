<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head><script type="text/javascript" src="../snippet.js"></script>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <link href="../styles.css" rel="StyleSheet" type="text/css">
<link href="../snippet.css" rel="StyleSheet" type="text/css">
  <title>Virtual Grid</title>
</head>

<body onload="prettyPrint()">
<!--<div id="banner">
Tizen</div>-->

<h1>Virtual Grid</h1>

<p>In the Web environment, it is challenging to display large amount of data in a list, such as displaying a contact list of over 1000 list items. It takes time to display the entire list in HTML and the DOM manipulation is complex.</p>

<p>The virtual grid widget is used to display a list of unlimited data elements on the screen for better performance. This widget displays the data in the grid format by reusing the existing grid control space. Virtual grids are based on the <span style="font-family: Courier New,Courier,monospace">jQuery.template</span> plugin as described in the <a href="https://github.com/jquery/jquery-tmpl" target="_blank">jQuery documentation for jQuery.template plugin</a>.</p>

<p>To add a virtual grid widget to the application, use the following code:</p>
<pre class="prettyprint">&lt;script id=&quot;tizen-demo-namecard&quot; type=&quot;text/x-jquery-tmpl&quot;&gt;
&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-demo-namecard&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-demo-namecard-pic&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img class=&quot;ui-demo-namecard-pic-img&quot; src=&quot;${TEAM_LOGO}&quot; /&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div class=&quot;ui-demo-namecard-contents&quot;&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span class=&quot;name ui-li-text-main&quot;&gt;${NAME}&lt;/span&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&nbsp;&nbsp;&nbsp;&lt;/div&gt;
&lt;/script&gt;

&lt;div id=&quot;virtualgrid-demo&quot; data-role=&quot;virtualgrid&quot; data-itemcount=&quot;1&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;
&lt;/div&gt;
</pre>

<p>The following table describes the virtual grid widget options.</p>

<table>
<tbody>
	<tr>
		<th>Option</th>
		<th>Input type</th>
		<th>Description</th>
	</tr>
	<tr>
      <td><span style="font-family: Courier New,Courier,monospace">data-template</span></td>
	  <td>String</td>
	  <td>Specifies the <span style="font-family: Courier New,Courier,monospace">jQuery.template</span> element ID.
	  <p>The <span style="font-family: Courier New,Courier,monospace">jQuery.template</span> must be defined. The template style can use rem units to support scalability.</p></td>
	</tr>
	<tr>
      <td><span style="font-family: Courier New,Courier,monospace">data-direction</span></td>
	  <td>String</td>
	  <td>Defines the scroll direction. The direction options are <span style="font-family: Courier New,Courier,monospace">x</span> (horizontal) and <span style="font-family: Courier New,Courier,monospace">y</span> (vertical). 
	  <p>The default value is <span style="font-family: Courier New,Courier,monospace">y</span>.</p></td>
	</tr>
	<tr>
      <td><span style="font-family: Courier New,Courier,monospace">data-rotation</span></td>
	  <td>Boolean</td>
	  <td>Defines whether the data elements are displayed from the beginning of the list again once the end of file is reached.
	  <p>The default value is <span style="font-family: Courier New,Courier,monospace">false</span>.</p></td>
	</tr>
	
</tbody>
</table>

<p>The virtual grid widget can define a handler for the following events:</p>
<ul>
<li><p><span style="font-family: Courier New,Courier,monospace">scrollstart</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">scrollstart</span> event is fired when the user starts scrolling through the grid:</p></li>
<pre class="prettyprint">&lt;div data-role=&quot;virtualgrid&quot; data-scroll=&quot;y&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;&lt;/div&gt;


// Option 01
$(&quot;.selector&quot;).virtualgrid
({
&nbsp;&nbsp;&nbsp;scrollstart: function(event, ui)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the scrollstart event
&nbsp;&nbsp;&nbsp;}
});

// Option 02
$(&quot;.selector&quot;).bind(&quot;scrollstart&quot;, function(event, ui)
{
&nbsp;&nbsp;&nbsp;// Handle the scrollstart event
});
</pre>

<li><p><span style="font-family: Courier New,Courier,monospace">scrollupdate</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">scrollupdate</span> event is fired when the user moves the scroll bar in the grid:</p></li>
<pre class="prettyprint">&lt;div data-role=&quot;virtualgrid&quot; data-scroll=&quot;y&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;&lt;/div&gt;

// Option 01
$(&quot;.selector&quot;).virtualgrid
({
&nbsp;&nbsp;&nbsp;scrollupdate: function(event, ui)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the scrollupdate event
&nbsp;&nbsp;&nbsp;}
});

// Option 02
$(&quot;.selector&quot;).bind(&quot;scrollupdate&quot;, function(event, ui)
{
&nbsp;&nbsp;&nbsp;// Handle the scrollupdate event
});
</pre>

<li><p><span style="font-family: Courier New,Courier,monospace">scrollstop</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">scrollstop</span> event is fired when the user stops scrolling:</p></li>
<pre class="prettyprint">&lt;div data-role=&quot;virtualgrid&quot; data-scroll=&quot;y&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;&lt;/div&gt;

// Option 01
$(&quot;.selector&quot;).virtualgrid
({
&nbsp;&nbsp;&nbsp;scrollstop: function(event, ui)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the scrollstop event
&nbsp;&nbsp;&nbsp;}
});

// Option 02
$(&quot;.selector&quot;).bind(&quot;scrollstop&quot;, function(event, ui)
{
&nbsp;&nbsp;&nbsp;// Handle the scrollstop event
});
</pre>

<li><p><span style="font-family: Courier New,Courier,monospace">select</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">select</span> event is fired when a virtual grid cell is selected:</p></li>
<pre class="prettyprint">&lt;div data-role=&quot;virtualgrid&quot; data-scroll=&quot;y&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;&lt;/div&gt;

// Option 01
$(&quot;.selector&quot;).virtualgrid
({
&nbsp;&nbsp;&nbsp;select: function(event, ui)
&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Handle the select event
&nbsp;&nbsp;&nbsp;}
});

// Option 02
$(&quot;.selector&quot;).bind(&quot;select&quot;, function(event, ui)
{
&nbsp;&nbsp;&nbsp;// Handle the select event
});
</pre>
</ul>

<p>The following methods can be used with virtual grid widgets:</p>

<ul>
<li><p><span style="font-family: Courier New,Courier,monospace">create(function itemData(index), number numItemData, function cacheItemData(minIndex, maxIndex))</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">create</span> method is used to call the jQuery <span style="font-family: Courier New,Courier,monospace">_create</span> method. In the method parameters:</p>
<ul>
<li><span style="font-family: Courier New,Courier,monospace">function itemData(index)</span> <p>Returns the JSON object matched with the given index. The index value is between 0 and <span style="font-family: Courier New,Courier,monospace">numItemData-1</span>.</p></li>
<li><span style="font-family: Courier New,Courier,monospace">number numItemData</span> | <span style="font-family: Courier New,Courier,monospace">function numItemData()</span> <p>Defines a static number of items, or a function returning number of items.</p></li>
<li><span style="font-family: Courier New,Courier,monospace">function cacheItemData(minIndex, maxIndex)</span> 
<p>Prepares the JSON data. This method is called before calling the <span style="font-family: Courier New,Courier,monospace">itemData(index)</span> method with index values between <span style="font-family: Courier New,Courier,monospace">minIndex</span> and <span style="font-family: Courier New,Courier,monospace">maxIndex</span>.</p></li>
</ul>
</li>
<pre class="prettyprint">function itemData( idx )
{
&nbsp;&nbsp;&nbsp;return DATA[idx];
}

function cacheItemData( minIdx, maxIdx )
{
&nbsp;&nbsp;&nbsp;// Prepare JSON data between minIdx and maxIdx here, if needed.
}
var numItemData = DATA.length;
.virtualgrid(&quot;create&quot;, { itemData, numItemData, cacheItemData });</pre>

<li><p><span style="font-family: Courier New,Courier,monospace">centerTo</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">centerTo</span> method is used to search for the DOM element with a specified class name. The retrieved element is placed at the center of the virtual grid. If multiple elements are retrieved, the first element from the result list is placed at the center of the virtual grid.</p></li>
<pre class="prettyprint">&lt;div data-role=&quot;virtualgrid&quot; data-scroll=&quot;y&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;&lt;/div&gt;

$(&quot;.selector&quot;).virtualgrid(&quot;centerTo&quot;, &quot;selector&quot;);
</pre>

<li><p><span style="font-family: Courier New,Courier,monospace">resize</span></p>
<p>The <span style="font-family: Courier New,Courier,monospace">resize</span> method is used to rearrange the DOM elements to fit a new screen size when the screen is resized:</p></li>
<pre class="prettyprint">&lt;div data-role=&quot;virtualgrid&quot; data-scroll=&quot;y&quot; data-template=&quot;tizen-demo-namecard&quot;&gt;&lt;/div&gt;

$(&quot;.selector&quot;).virtualgrid(&quot;resize&quot;);
</pre>

<table class="note">
			<tbody>
				<tr>
					<th class="note">Note</th>
				</tr>
				<tr>
					<td class="note">The <span style="font-family: Courier New,Courier,monospace">resize</span> method of the virtual grid widget is supported since Tizen 2.0.</td>
</tr>
</tbody>
</table>

</ul>

<h2>Where to Go Next</h2>
<ul>
 <li><a href="widget_reference.htm">Widget Reference</a></li>

</ul>

<div id="footer">
<hr size="1" /><font size="1">Except as noted, this content is licensed under <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank">Creative Commons Attribution 3.0</a>.<br />For details, see the <a href="https://www.tizen.org/content-license" target="_blank">Content License</a>.</font> </div>
<!--start-->
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-25976949-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<!--end-->



</body>
</html>
