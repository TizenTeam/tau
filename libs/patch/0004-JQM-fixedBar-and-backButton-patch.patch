From 5473991ef637e148085e155981dc743a3a7ec02c Mon Sep 17 00:00:00 2001
From: Jun Jinhyuk <jinhyuk.jun@samsung.com>
Date: Thu, 7 Jun 2012 01:33:22 -0400
Subject: [PATCH] JQM:fixedBar and backButton patch

Signed-off-by: Jinhyuk Jun <jinhyuk.jun@samsung.com>
---
 .../js/jquery.mobile.fixedToolbar.js               |  212 +++++++++++++++++++-
 .../js/jquery.mobile.page.sections.js              |   69 +++++--
 2 files changed, 259 insertions(+), 22 deletions(-)

diff --git a/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.fixedToolbar.js b/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.fixedToolbar.js
index 0f9c23d..aa4dd18 100644
--- a/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.fixedToolbar.js
+++ b/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.fixedToolbar.js
@@ -96,7 +96,7 @@ define( [ "jquery", "./jquery.mobile.widget", "./jquery.mobile.core", "./jquery.
 
 			self._addTransitionClass();
 			self._bindPageEvents();
-			self._bindToggleHandlers();
+//			self._bindToggleHandlers();
 		},
 
 		_addTransitionClass: function(){
@@ -112,6 +112,148 @@ define( [ "jquery", "./jquery.mobile.widget", "./jquery.mobile.core", "./jquery.
 			}
 		},
 
+/* new_header */
+		resizeHeaderFooter: function(event){
+			/* Fixed header modify for theme-s */
+			var $elPage = $( event.target );
+			var $elHeader = $elPage.find( ":jqmData(role='header')" );
+			var $elFieldcontain = $elHeader.find( ":jqmData(role='fieldcontain')" );
+			var $elControlgroup = $elHeader.find( ":jqmData(role='controlgroup')" );
+			var $elContent = $elPage.find( ".ui-content" );
+			var tStyle = "normal";
+
+			if ( $elFieldcontain.length != 0 || $elControlgroup.length != 0 ) {
+				tStyle = "extended";
+			}
+
+			if ( $elHeader.jqmData("position") == "fixed" || $.tizen.frameworkData.theme.match(/tizen/) || $elHeader.css("position") == "fixed" ) {
+				$elHeader
+					.css( "position", "fixed" )
+					.css( "top", "0px" );
+
+				if ( $elHeader.children().is(".ui-navbar") ) {
+					$elHeader.addClass( "ui-title-controlbar-height" );
+					$( event.target ).find( ".ui-content" ).addClass( "ui-title-content-controlbar-height" );
+				} else {
+					if( $elHeader.length ) {
+						$( event.target ).find( ".ui-content" ).addClass( "ui-title-content-" + tStyle + "-height" );
+					} else {
+						$( event.target ).find( ".ui-content" ).addClass( "ui-title-content-no-height" );
+					}
+				}
+			}
+
+			if ( $elHeader.children().is(".ui-option-header") ) {
+				$elContent.removeClass( "ui-title-content-" + tStyle + "-height" );
+
+				if ( $elHeader.children().is(".input-search-bar") ) {
+					$elContent.addClass( "ui-title-content-optionheader-search" );
+				} else {
+					if ( $.tizen.optionheader.prototype.options.collapseOnInit == true ) {
+						$elContent.addClass( "ui-title-content-option-header-collapsed-1line-height" );
+					} else {
+						$elContent.addClass( "ui-title-content-option-header-expanded-1line-height" );
+					}
+				}
+			} else if( $elHeader.find("input").attr("type") === "search" || $elHeader.find("input").attr("type") === "tizen-search" || $elHeader.find("input").jqmData("type") == "search" || $elHeader.find("input").jqmData("type") == "tizen-search" ) {
+				$elContent
+					.removeClass( "ui-title-content-" + tStyle + "-height" )
+					.addClass( "ui-title-content-search" );
+			}
+
+			if ( $elHeader.children().is("a") ||
+				$elHeader.children().find(".ui-radio").length != 0 ) {
+				if ( tStyle == "normal" ) {
+					if ( $elHeader.children("a").length == 3 ) {
+						$elHeader.find( "a" ).eq( 1 )
+							.removeClass( "ui-btn-right" )
+							.addClass( "ui-title-normal-3btn" );
+						$elHeader.find( "a" ).eq( 2 )
+							.addClass( "ui-btn-right" );
+					}
+				} else {
+					var gLength = $elFieldcontain.length?$elFieldcontain.find( ".ui-radio" ).length:$elControlgroup.find( "a" ).length;
+
+					$elHeader.addClass( "ui-title-extended-height" );
+
+					$elFieldcontain.length?$elFieldcontain.find( ".ui-controlgroup" ).addClass( "ui-title-extended-controlgroup" ).addClass( "ui-extended-controlgroup" ):
+						$elControlgroup.addClass( "ui-title-extended-button-controlgroup" ).addClass( "ui-extended-controlgroup" );
+
+					$elFieldcontain.length?$elFieldcontain.addClass( "ui-title-extended-segment-style" ):$elControlgroup.addClass( "ui-title-extended-segment-style" );
+
+					if ( gLength == 2 || gLength == 3 || gLength == 4 ) {
+						$elFieldcontain.length?$elFieldcontain.addClass( "ui-title-extended-controlgroup-" + gLength + "btn" ):$elControlgroup.addClass( "ui-title-extended-controlgroup-" + gLength + "btn" );
+					}
+				}
+				$elContent.addClass( "ui-title-content-" + tStyle + "-height" );
+			}
+
+			// divide content mode scrollview and non-scrollview
+			// recalculate content area when resize callback occur
+			if ( $.support.scrollview ) {
+				if ( $elHeader.css( "position" ) != "fixed" ) {
+					$elHeader.css( "position", "fixed" );
+				}
+
+				$elContent.css( "top", $elHeader.height() );
+			} else {
+				if ( $elHeader.css("position") != "fixed" ) {
+					$elHeader.css( "position", "relative" );
+					$elContent.css( "top", "0" );
+				}
+			}
+
+			var $elFooter = $( document ).find( ":jqmData(role='footer')" );
+
+			if ( $elFooter.find(".ui-navbar").is(".ui-controlbar-s") ){
+				$elFooter
+					.css( "top", $(window).height() - $elFooter.height() )
+					.show();
+			}
+
+			if ( $elFooter.children().find(".ui-radio").length != 0 ) {
+				var $elFooterGroup = $elFooter.find( ":jqmData(role='fieldcontain')" );
+				var gLength = $elFooterGroup.find( ".ui-radio" ).length;
+
+				$elFooterGroup.find( ".ui-controlgroup" )
+					.addClass( "ui-extended-controlgroup" )
+					.addClass( "ui-footer-extended-controlgroup" )
+					.css( "display", "inline" );
+
+					/* Groupcontrol cannot initialize inline property at first page */
+				$elFooterGroup.addClass( "ui-title-extended-controlgroup-" + gLength + "btn" );
+
+				footerButton = $elFooter.children( "a" );
+				footerButton.each(function( i ) {
+					if ( footerButton.eq( i ).is(".ui-btn") && !footerButton.eq( i ).is(".ui-btn-back") ){
+						footerButton.eq( i )
+							.removeClass( "ui-btn-left" )
+							.addClass( "ui-btn-footer-right" );
+					}
+				});
+			}
+
+			if ( $elFooter.is(".ui-footer-fixed") ) {
+				$elFooter.css( "top", $(window).height() - $elFooter.height() );
+			}
+
+			/* Increase Content size with dummy <div> because of footer height */
+			if ( $elFooter.length != 0 && $( event.target ).find( ".dummy-div" ).length == 0 ) {
+				$( event.target ).find( ":jqmData(role='content')" ).append( '<div class="dummy-div"></div>' );
+				$( ".dummy-div" )
+					.css( "width", $elFooter.width() )
+					.css( "height", $elFooter.height() );
+			}
+
+			/* Header position fix(remove transition) */
+			var next_id = $( event.target ).attr( "id" );
+
+			$( "#"+next_id ).find( ":jqmData(role='header')" )
+				.removeClass( "fade in out" )
+				.appendTo( $.mobile.pageContainer );
+		},
+/* new_header */
+
 		_bindPageEvents: function(){
 			var self = this,
 				o = self.options,
@@ -121,26 +263,34 @@ define( [ "jquery", "./jquery.mobile.widget", "./jquery.mobile.core", "./jquery.
 			// Fixed toolbars require page zoom to be disabled, otherwise usability issues crop up
 			// This method is meant to disable zoom while a fixed-positioned toolbar page is visible
 			$el.closest( ".ui-page" )
-				.bind( "pagebeforeshow", function(){
+				.bind( "pagebeforeshow", function(event){
 					if( o.disablePageZoom ){
 						$.mobile.zoom.disable( true );
 					}
 					if( !o.visibleOnPageShow ){
 						self.hide( true );
 					}
+/* new_header */
+					self.resizeHeaderFooter(event);
+/* new_header */
 				} )
 				.bind( "webkitAnimationStart animationstart updatelayout", function(){
 					if( o.updatePagePadding ){
 						self.updatePagePadding();
 					}
 				})
-				.bind( "pageshow", function(){
+				.bind( "pageshow", function(event){
 					self.updatePagePadding();
 					if( o.updatePagePadding ){
 						$( window ).bind( "throttledresize." + self.widgetName, function(){
-						 	self.updatePagePadding();
+							self.updatePagePadding();
 						});
 					}
+/* new_header */
+					/* Header position fix(remove transition) */
+					$( "body" ).children( ":jqmData(role='header')" )
+						.insertBefore( $(event.target).find(":jqmData(role='content')").eq( 0 ) );
+/* new_header */
 				})
 				.bind( "pagebeforehide", function( e, ui ){
 					if( o.disablePageZoom ){
@@ -180,9 +330,54 @@ define( [ "jquery", "./jquery.mobile.widget", "./jquery.mobile.core", "./jquery.
 			// This behavior only applies to "fixed", not "fullscreen"
 			if( this.options.fullscreen ){ return; }
 
-			$el.closest( ".ui-page" ).css( "padding-" + ( header ? "top" : "bottom" ), $el.outerHeight() );
+//			$el.closest( ".ui-page" ).css( "padding-" + ( header ? "top" : "bottom" ), $el.outerHeight() );
+/* new_header */
+			this.updateResizeEvent();
+/* new_header */
+		},
+
+
+/* new_header */
+		updateResizeEvent: function() {
+			var $elFooter;
+
+			if ( $( document ).find( ".ui-page-active" ).length ) {
+				$elFooter = $( document ).find( ".ui-page-active" ).find( ":jqmData(role='footer')" );
+			} else {
+				$elFooter = $( document ).find( ":jqmData(role='footer')" ).eq( 0 );
+			}
+
+			var $elFooterControlbar = $elFooter.find( ".ui-navbar" );
+
+			$elFooter
+				.css( "top", $(window).height() - $elFooter.height() )
+				.show();
+
+			if ( $elFooterControlbar.jqmData("style") == "toolbar" ) {
+				$elFooterControlbar.css( "width", $( window ).width() - $elFooterControlbar.siblings( ".ui-btn" ).width() );
+			}
+
+			var $elHeader = $( document ).find( ".ui-page-active" ).find( ":jqmData(role='header')" ).length?$( document ).find( ".ui-page-active" ).find( ":jqmData(role='header')" ):$( document ).find( ".ui-page-active" ).siblings(":jqmData(role='header')");
+			var $elContent = $( document ).find( ".ui-page-active" ).find( ":jqmData(role='content')" );
+
+			if ( $.support.scrollview ) {
+				if ( $elHeader.css("position") != "fixed" ) {
+					$elHeader.css( "position", "fixed" );
+				}
+
+				$elContent.css( "top", $elHeader.height() );
+				$elContent.css( "height", document.documentElement.clientHeight - $elFooter.height() - $elHeader.height() );
+			} else {
+				if ( $elHeader.css("position") != "fixed" ) {
+					$elHeader.css( "position", "relative" );
+					$elContent
+						.css( "top", "0" )
+						.css( "height", "" );
+				}
+			}
 		},
-		
+/* new_header */
+
 		_useTransition: function( notransition ){
 			var $win = $( window ),
 				$el = this.element,
@@ -191,7 +386,7 @@ define( [ "jquery", "./jquery.mobile.widget", "./jquery.mobile.core", "./jquery.
 				pHeight = $el.closest( ".ui-page" ).height(),
 				viewportHeight = $.mobile.getScreenHeight(),
 				tbtype = $el.is( ":jqmData(role='header')" ) ? "header" : "footer";
-				
+
 			return !notransition &&
 				( this.options.transition && this.options.transition !== "none" &&
 				(
@@ -269,13 +464,12 @@ define( [ "jquery", "./jquery.mobile.widget", "./jquery.mobile.core", "./jquery.
 	//auto self-init widgets
 	$( document )
 		.bind( "pagecreate create", function( e ){
-			
 			// DEPRECATED in 1.1: support for data-fullscreen=true|false on the page element.
 			// This line ensures it still works, but we recommend moving the attribute to the toolbars themselves.
 			if( $( e.target ).jqmData( "fullscreen" ) ){
 				$( $.mobile.fixedtoolbar.prototype.options.initSelector, e.target ).not( ":jqmData(fullscreen)" ).jqmData( "fullscreen", true );
 			}
-			
+
 			$.mobile.fixedtoolbar.prototype.enhanceWithin( e.target );
 		});
 
diff --git a/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.page.sections.js b/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.page.sections.js
index e0a718d..ff35d89 100644
--- a/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.page.sections.js
+++ b/libs/js/jquery-mobile-1.1.0/js/jquery.mobile.page.sections.js
@@ -13,6 +13,8 @@ $.mobile.page.prototype.options.backBtnTheme = null;
 $.mobile.page.prototype.options.headerTheme  = "a";
 $.mobile.page.prototype.options.footerTheme  = "a";
 $.mobile.page.prototype.options.contentTheme = null;
+$.mobile.page.prototype.options.footerExist = true;
+$.mobile.page.prototype.options.footerUserControl = false;
 
 $( document ).delegate( ":jqmData(role='page'), :jqmData(role='dialog')", "pagecreate", function( e ) {
 
@@ -34,6 +36,13 @@ $( document ).delegate( ":jqmData(role='page'), :jqmData(role='dialog')", "pagec
 			rightbtn,
 			backBtn;
 
+		var normalFooter,
+			footerExist = $this.jqmData("footerexist");
+
+		if ( footerExist != undefined ) {
+			o.footerExist = footerExist;
+		}
+
 		$this.addClass( "ui-" + role );
 
 		//apply theming and markup modifications to page,header,content,footer
@@ -47,28 +56,32 @@ $( document ).delegate( ":jqmData(role='page'), :jqmData(role='dialog')", "pagec
 				// Add ARIA role
 				.attr( "role", role === "header" ? "banner" : "contentinfo" );
 
-			if( role === "header") {
-				// Right,left buttons
-				$headeranchors	= $this.children( "a" );
-				leftbtn	= $headeranchors.hasClass( "ui-btn-left" );
-				rightbtn = $headeranchors.hasClass( "ui-btn-right" );
+			// Right,left buttons
+			$headeranchors	= $this.children( "a" );
+			leftbtn	= $headeranchors.hasClass( "ui-btn-left" );
+			rightbtn = $headeranchors.hasClass( "ui-btn-right" );
 
-				leftbtn = leftbtn || $headeranchors.eq( 0 ).not( ".ui-btn-right" ).addClass( "ui-btn-left" ).length;
+			leftbtn = leftbtn || $headeranchors.eq( 0 ).not( ".ui-btn-right" ).addClass( "ui-btn-left" ).length;
+			rightbtn = rightbtn || $headeranchors.eq( 1 ).addClass( "ui-btn-right" ).length;
 
-				rightbtn = rightbtn || $headeranchors.eq( 1 ).addClass( "ui-btn-right" ).length;
+			// set default userControl value
+			if ( o.footerUserControl ) {
+				$.mobile.page.prototype.options.footerUserControl = "true";
 			}
 
 			// Auto-add back btn on pages beyond first view
-			if ( o.addBackBtn &&
-				role === "header" &&
-				$( ".ui-page" ).length > 1 &&
-				$page.jqmData( "url" ) !== $.mobile.path.stripHash( location.hash ) &&
-				!leftbtn ) {
+			if ( o.addBackBtn && role === "footer" && o.footerExist &&
+			$this.jqmData( "url" ) !== $.mobile.path.stripHash( location.hash ) && !leftbtn ) {
 
-				backBtn = $( "<a href='#' class='ui-btn-left' data-"+ $.mobile.ns +"rel='back' data-"+ $.mobile.ns +"icon='arrow-l'>"+ o.backBtnText +"</a>" )
+				backBtn = $( "<a href='#' class='ui-btn-back' data-"+ $.mobile.ns +"rel='back' data-"+ $.mobile.ns +"icon='header-back-btn'></a>" )
 					// If theme is provided, override default inheritance
 					.attr( "data-"+ $.mobile.ns +"theme", o.backBtnTheme || thisTheme )
 					.prependTo( $this );
+
+				backBtn.bind( "vclick", function( event ) {
+					window.history.back();
+					return false;
+				});
 			}
 
 			// Page title
@@ -87,6 +100,36 @@ $( document ).delegate( ":jqmData(role='page'), :jqmData(role='dialog')", "pagec
 
 			// Add ARIA role
 			$this.attr( "role", "main" );
+
+			/* Add default footer to add backbtn */
+			thisTheme = "s";
+
+			if ( o.footerExist ) {
+				backBtn = $( "<a href='#' class='ui-btn-back' data-" +
+						$.mobile.ns + "rel='back' data-" +
+						$.mobile.ns + "icon='header-back-btn'></a>" )
+						.attr( "data-" + $.mobile.ns + "theme", o.backBtnTheme || thisTheme );
+				var footer = $page.find("div:jqmData(role='footer')");
+
+				if ( footer.length != 0 ) {
+					if ( !footer.find("jqmData(role='navbar')").is("jqmData(style='tabbar')") ) {
+						backBtn.appendTo( footer );
+					}
+				} else {
+					if ( !$.mobile.page.prototype.options.footerUserControl ) {
+						normalFooter = $( "<div data-role='footer' class='ui-footer ui-bar-s ui-footer-fixed fade ui-fixed-overlay' data-position='fixed'></div>" )
+								.insertAfter( $page.find( ".ui-content" ) );
+						backBtn.appendTo( normalFooter );
+					}
+				}
+
+				if ( backBtn ) {
+					backBtn.bind( "vclick", function( event ) {
+						window.history.back();
+						return false;
+					});
+				}
+			}
 		}
 	});
 });
-- 
1.7.4.1

